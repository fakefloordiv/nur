// Code generated by "stringer -type=Type"; DO NOT EDIT.

package lex

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unknown-0]
	_ = x[Keyword-1]
	_ = x[Int-2]
	_ = x[Id-3]
	_ = x[OpPlus-4]
	_ = x[OpMinus-5]
	_ = x[OpSlash-6]
	_ = x[OpStar-7]
	_ = x[OpStarStar-8]
	_ = x[UnExclaim-9]
	_ = x[ChEq-10]
	_ = x[ChDot-11]
	_ = x[LParen-12]
	_ = x[RParen-13]
	_ = x[LBrace-14]
	_ = x[RBrace-15]
	_ = x[LQBrace-16]
	_ = x[RQBrace-17]
	_ = x[Comma-18]
}

const _Type_name = "UnknownKeywordIntIdOpPlusOpMinusOpSlashOpStarOpStarStarUnExclaimChEqChDotLParenRParenLBraceRBraceLQBraceRQBraceComma"

var _Type_index = [...]uint8{0, 7, 14, 17, 19, 25, 32, 39, 45, 55, 64, 68, 73, 79, 85, 91, 97, 104, 111, 116}

func (i Type) String() string {
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
